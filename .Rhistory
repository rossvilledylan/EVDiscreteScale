conductModel <- aov(conduct ~ type)
summary(conductModel)
type <- as.factor(group)
summary(type)
conductModel <- aov(conduct ~ type)
summary(conductModel)
type <- as.factor(fattyacid)
summary(type)
conductModel <- aov(conduct ~ type)
summary(conductModel)
TukeyHSD(conductModel,conf.level = 0.95)
linModel <- lm(width ~ spec - 1)
res <- resid(linModel)
plot(fitted(model),resid)
plot(fitted(linModel),resid)
plot(fitted(linModel),res)
model <- aov(width~species)
summary(model)
boxplot(width ~ species, col="green", xlab="Species", ylab="Width of Egg")
summary(linearModel)
summary(conductModel)
TukeyHSD(model,conf.level=0.95)
TukeyHSD(conductModel,conf.level=0.95)
boxplot(conduct ~ type, col="blue", xlab="Type of Soap", ylab="Conductivity")
model2 <- lm(conduct ~ fattyacid)
summary(model2)
plot(fitted(model2), rstandard(model2), pch=16, xlab="Predicted values", ylab="Std.residuals")
type <- as.factor(group)
summary(type)
linearModel <- lm(conduct ~ fattyacid)
conductModel <- aov(conduct ~ type)
summary(conductModel)
TukeyHSD(conductModel,conf.level=0.95)
boxplot(conduct ~ type, col="blue", xlab="Percentage of Fatty Acid", ylab="Conductivity")
type <- as.factor(fattyacid)
boxplot(conduct ~ type, col="blue", xlab="Percentage of Fatty Acid", ylab="Conductivity")
faccer <- 800!
data <- read.csv(file.choose())
data <- read.csv(file.choose())
data <- read.csv(file.choose())
data <- read.csv(file.choose())
data <- read.csv(file.choose())
data <- read.csv(file.choose())
names(data)
attach(data)
os <- factor(OS, levels = c("Debian","Ubuntu"))
os <- factor(os, levels = c("Debian","Ubuntu"))
boxplot(seconds ~ os, col="green", ylab="Seconds")
data <- read.csv(file.choose())
names(data)
attach(data)
os <- factor(os, levels = c("Debian","Ubuntu"))
boxplot(seconds ~ os, col="green", ylab="Seconds")
os
summary(os)
model <- aov(seconds~os)
summary(model)
tapply(seconds,os,mean)
data <- read.csv(file.choose())
names(data)
attach(data)
os <- factor(os, levels = c("Debian","Ubuntu"))
boxplot(seconds ~ os, col="green", ylab="Seconds")
model <- aov(seconds~os)
summary(model)
tapply(seconds,os,mean)
data <- read.csv(file.choose())
names(data)
attach(data)
os <- factor(os, levels = c("Debian","Ubuntu"))
boxplot(seconds ~ os, col="green", ylab="Seconds")
model <- aov(seconds~os)
summary(model)
tapply(seconds,os,mean)
TukeyHSD(model, conf.level = 0.95)
data <- read.csv(file.choose())
names(data)
attach(data)
os <- factor(os, levels = c("Debian","Ubuntu"))
data <- read.csv(file.choose())
names(data)
attach(data)
os <- factor(os, levels = c("Debian","Ubuntu"))
boxplot(seconds ~ os, col="green", ylab="Seconds")
model <- aov(seconds~os)
summary(model)
tapply(seconds,os,mean)
TukeyHSD(model, conf.level = 0.95)
data <- read.csv(file.choose())
names(data)
attach(data)
hypervisor <- facotr(vmm, levels = c("VirtualBox","VMWare"))
hypervisor <- factor(vmm, levels = c("VirtualBox","VMWare"))
boxplot(seconds ~ os, col="green", ylab="Seconds")
os <- factor(os, levels = c("Debian","Ubuntu"))
hypervisor <- factor(vmm, levels = c("VirtualBox","VMWare"))
boxplot(seconds ~ os, col="green", ylab="Seconds")
data <- read.csv(file.choose())
names(data)
attach(data)
os <- factor(os, levels = c("Debian","Ubuntu"))
hypervisor <- factor(vmm, levels = c("VirtualBox","VMWare"))
boxplot(seconds ~ os, col="green", ylab="Seconds")
model <- aov(seconds~os)
summary(model)
data <- read.csv(file.choose())
names(data)
attach(data)
os <- factor(os, levels = c("Debian","Ubuntu"))
boxplot(seconds ~ os, col="green", ylab="Seconds")
data <- read.csv(file.choose())
names(data)
attach(data)
os <- factor(os, levels = c("Debian","Ubuntu"))
boxplot(seconds ~ os, col="green", ylab="Seconds")
data <- read.csv(file.choose())
names(data)
attach(data)
os <- factor(os, levels = c("Debian","Ubuntu"))
boxplot(seconds ~ os, col="green", ylab="Seconds")
data <- read.csv(file.choose())
os <- factor(os, levels = c("Debian","Ubuntu"))
boxplot(seconds ~ os, col="green", ylab="Seconds")
names(data)
attach(data)
boxplot(seconds ~ os, col="green", ylab="Seconds")
summary(model)
model <- aov(seconds~os)
summary(model)
tapply(seconds,os,mean)
TukeyHSD(model, conf.level = 0.95)
model2 <- aov(seconds~hypervisor+os)
data <- read.csv(file.choose())
names(data)
attach(data)
os <- factor(os, levels = c("Debian","Ubuntu"))
hypervisor <- factor(vmm, levels = c("VirtualBox","VMWare"))
boxplot(seconds ~ os, col="green", ylab="Seconds")
boxplot(seconds ~ hypervisor, col="purple",ylab="Seconds")
boxplot(seconds ~ hypervisor + os, col="blue",ylab="Seconds")
model <- aov(seconds~os)
summary(model)
boxplot(seconds ~ os, col="green", ylab="Seconds")
boxplot(seconds ~ hypervisor, col="purple",ylab="Seconds")
model2 <- aov(seconds~os+hypervisor)
summary(model2)
model3 <- aov(seconds~hypervisor)
summary(model3)
data <- read.csv(file.choose())
names(data)
attach(data)
os <- factor(os, levels = c("Debian","Ubuntu"))
boxplot(seconds ~ os, col="green", ylab="Seconds")
boxplot(seconds ~ os, col="red", ylab="Seconds")
model <- aov(seconds~os)
summary(model)
TukeyHSD(model, conf.level = 0.95)
data <- read.csv(file.choose())
names(data)
attach(data)
hypervisor <- factor(vmm, levels = c("VirtualBox","VMWare"))
boxplot(seconds ~ hypervisor, col="purple",ylab="Seconds")
model3 <- aov(seconds~hypervisor)
summary(model3)
data <- read.csv(file.choose())
names(data)
attach(data)
os <- factor(os, levels = c("Debian","Ubuntu"))
hypervisor <- factor(vmm, levels = c("VirtualBox","VMWare"))
model <- aov(seconds~os+hypervisor)
summary(model)
merged_df <- inner_join(serialData, parallelData, by = "Simulation_Time")
install.packages("ggplot2")
inner_join
install.packages("dplyr")
library(ggplot2)
ggplot(long_df, aes(x = Simulation_Time, y = Real_Time, color = Dataset)) +
geom_line() +
labs(title = "Comparison of Real Time Across Simulations",
x = "Simulation Time",
y = "Real Time") +
theme_minimal()
serialData <- read_excel(file.choose())
library(readxl)
library(ggplot2)
library(dplyr)
serialData <- read_excel(file.choose())
parallelData <- read_excel(file.choose())
colnames(serialData) <- c("Simulation_Time", "Real_Time_1")
colnames(parallelData) <- c("Simulation_Time", "Real_Time_2")
merged_df <- inner_join(serialData, parallelData, by = "Simulation_Time")
long_df <- merged_df %>%
pivot_longer(cols = starts_with("Real_Time"),
names_to = "Dataset",
values_to = "Real_Time")
library(tidyverse)
long_df <- merged_df %>%
pivot_longer(cols = starts_with("Real_Time"),
names_to = "Dataset",
values_to = "Real_Time")
ggplot(long_df, aes(x = Simulation_Time, y = Real_Time, color = Dataset)) +
geom_line() +
labs(title = "Comparison of Real Time Across Simulations",
x = "Simulation Time",
y = "Real Time") +
theme_minimal()
ggplot(long_df, aes(x = Simulation_Time, y = Real_Time, color = Dataset)) +
geom_line() +
scale_x_continuous(breaks = seq(min(long_df$Simulation_Time), max(long_df$Simulation_Time), by = 3)) +
labs(title = "Comparison of Real Time Across Simulations",
x = "Simulation Time",
y = "Real Time") +
theme_minimal()
serialData <- read_excel(file.choose())
parallelData <- read_excel(file.choose())
colnames(serialData) <- c("Simulation_Time", "Real_Time_1")
colnames(parallelData) <- c("Simulation_Time", "Real_Time_2")
merged_df <- inner_join(serialData, parallelData, by = "Simulation_Time")
long_df <- merged_df %>%
pivot_longer(cols = starts_with("Real_Time"),
names_to = "Dataset",
values_to = "Real_Time")
ggplot(long_df, aes(x = Simulation_Time, y = Real_Time, color = Dataset)) +
geom_line() +
scale_x_continuous(breaks = seq(min(long_df$Simulation_Time), max(long_df$Simulation_Time), by = 3)) +
labs(title = "Comparison of Real Time Across Simulations",
x = "Simulation Time",
y = "Real Time") +
theme_minimal()
parallelData <- read_excel(file.choose())
colnames(serialData) <- c("Simulation_Time", "Real_Time_1")
colnames(parallelData) <- c("Simulation_Time", "Real_Time_2")
merged_df <- inner_join(serialData, parallelData, by = "Simulation_Time")
long_df <- merged_df %>%
pivot_longer(cols = starts_with("Real_Time"),
names_to = "Dataset",
values_to = "Real_Time")
ggplot(long_df, aes(x = Simulation_Time, y = Real_Time, color = Dataset)) +
geom_line() +
scale_x_continuous(breaks = seq(min(long_df$Simulation_Time), max(long_df$Simulation_Time), by = 3)) +
labs(title = "Comparison of Real Time Across Simulations",
x = "Simulation Time",
y = "Real Time") +
theme_minimal()
parallelData <- read_excel(file.choose())
colnames(serialData) <- c("Simulation_Time", "Real_Time_1")
colnames(parallelData) <- c("Simulation_Time", "Real_Time_2")
merged_df <- inner_join(serialData, parallelData, by = "Simulation_Time")
long_df <- merged_df %>%
pivot_longer(cols = starts_with("Real_Time"),
names_to = "Dataset",
values_to = "Real_Time")
ggplot(long_df, aes(x = Simulation_Time, y = Real_Time, color = Dataset)) +
geom_line() +
scale_x_continuous(breaks = seq(min(long_df$Simulation_Time), max(long_df$Simulation_Time), by = 3)) +
labs(title = "Comparison of Real Time Across Simulations",
x = "Simulation Time",
y = "Real Time") +
theme_minimal()
colnames(serialData) <- c("Simulation_Time", "Serial Simulation")
colnames(parallelData) <- c("Simulation_Time", "Parallel Simulation")
merged_df <- inner_join(serialData, parallelData, by = "Simulation_Time")
long_df <- merged_df %>%
pivot_longer(cols = starts_with("Real_Time"),
names_to = "Dataset",
values_to = "Real_Time")
ggplot(long_df, aes(x = Simulation_Time, y = Real_Time, color = Dataset)) +
geom_line() +
scale_x_continuous(breaks = seq(min(long_df$Simulation_Time), max(long_df$Simulation_Time), by = 3)) +
labs(title = "Comparison of Real Time Across Simulations",
x = "Simulation Time",
y = "Real Time") +
theme_minimal()
long_df <- merged_df %>%
pivot_longer(cols = starts_with("Real_Time"),
names_to = "Dataset",
values_to = "Real_Time")
serialData <- read_excel(file.choose())
colnames(parallelData) <- c("Simulation_Time", "Parallel Simulation")
parallelData <- read_excel(file.choose())
colnames(serialData) <- c("Simulation_Time", "Serial Simulation")
colnames(parallelData) <- c("Simulation_Time", "Parallel Simulation")
merged_df <- inner_join(serialData, parallelData, by = "Simulation_Time")
long_df <- merged_df %>%
pivot_longer(cols = starts_with("Real_Time"),
names_to = "Dataset",
values_to = "Real_Time")
ggplot(long_df, aes(x = Simulation_Time, y = Real_Time, color = Dataset)) +
geom_line() +
scale_x_continuous(breaks = seq(min(long_df$Simulation_Time), max(long_df$Simulation_Time), by = 3)) +
labs(title = "Comparison of Real Time Across Simulations",
x = "Simulation Time",
y = "Real Time") +
theme_minimal()
colnames(serialData) <- c("Simulation_Time", "Real_Time_1")
colnames(parallelData) <- c("Simulation_Time", "Real_Time_2")
merged_df <- inner_join(serialData, parallelData, by = "Simulation_Time")
long_df <- merged_df %>%
pivot_longer(cols = starts_with("Real_Time"),
names_to = "Dataset",
values_to = "Real_Time")
colnames(serialData) <- c("Simulation_Time", "Simulation Serial")
colnames(parallelData) <- c("Simulation_Time", "Simulation Parallel")
merged_df <- inner_join(serialData, parallelData, by = "Simulation_Time")
long_df <- merged_df %>%
pivot_longer(cols = starts_with("Simulation"),
names_to = "Dataset",
values_to = "Real_Time")
ggplot(long_df, aes(x = Simulation_Time, y = Real_Time, color = Dataset)) +
geom_line() +
scale_x_continuous(breaks = seq(min(long_df$Simulation_Time), max(long_df$Simulation_Time), by = 3)) +
labs(title = "Comparison of Real Time Across Simulations",
x = "Simulation Time",
y = "Real Time") +
theme_minimal()
Real_Time_1
Real_Time_1
colnames(serialData) <- c("Simulation_Time", "Real_Time_1")
colnames(parallelData) <- c("Simulation_Time", "Real_Time_2")
merged_df <- inner_join(serialData, parallelData, by = "Simulation_Time")
long_df <- merged_df %>%
pivot_longer(cols = starts_with("Time"),
names_to = "Dataset",
values_to = "Real_Time")
ggplot(long_df, aes(x = Simulation_Time, y = Real_Time, color = Dataset)) +
geom_line() +
scale_x_continuous(breaks = seq(min(long_df$Simulation_Time), max(long_df$Simulation_Time), by = 3)) +
labs(title = "Comparison of Real Time Across Simulations",
x = "Simulation Time",
y = "Real Time") +
theme_minimal()
ggplot(long_df, aes(x = Simulation_Time, y = Real_Time, color = Dataset)) +
geom_line() +
scale_x_continuous(breaks = seq(min(long_df$Simulation_Time), max(long_df$Simulation_Time), by = 1)) +
labs(title = "Comparison of Real Time Across Simulations",
x = "Number of Stations",
y = "Real Time") +
theme_minimal()
serialStations <- read_excel(file.choose())
parallelStations <- read_excel(file.choose())
colnames(serialStations) <- c("Num_Stations","Real_Time_1")
colnames(parallelStations) <- c("Num_Stations","Real_Time_2")
merged_sf <- inner_join(serialStations,parallelStations, by = "Num_Stations")
long_df <- merged_sf %>%
pivot_longer(cols = starts_with("Real_Time"),
names_to = "Dataset",
values_to = "Real_Time")
ggplot(long_df, aes(x = Simulation_Time, y = Real_Time, color = Dataset)) +
geom_line() +
scale_x_continuous(breaks = seq(min(long_df$Simulation_Time), max(long_df$Simulation_Time), by = 1)) +
labs(title = "Comparison of Real Time Across Simulations",
x = "Number of Stations",
y = "Real Time") +
theme_minimal()
long_sf <- merged_sf %>%
pivot_longer(cols = starts_with("Real_Time"),
names_to = "Dataset",
values_to = "Real_Time")
ggplot(long_sf, aes(x = Simulation_Time, y = Real_Time, color = Dataset)) +
geom_line() +
scale_x_continuous(breaks = seq(min(long_sf$Simulation_Time), max(long_sf$Simulation_Time), by = 1)) +
labs(title = "Comparison of Real Time Across Simulations",
x = "Number of Stations",
y = "Real Time") +
theme_minimal()
ggplot(long_sf, aes(x = Simulation_Time, y = Real_Time, color = Dataset)) +
geom_line() +
labs(title = "Comparison of Real Time Across Simulations",
x = "Number of Stations",
y = "Real Time") +
theme_minimal()
ggplot(long_sf, aes(x = Simulation_Time, y = Real_Time, color = Dataset)) +
geom_line(),
ggplot(long_sf, aes(x = Num_Stations, y = Real_Time, color = Dataset)) +
geom_line() +
scale_x_continuous(breaks = seq(min(long_sf$Num_Stations), max(long_sf$Num_Stations), by = 1)) +
labs(title = "Comparison of Real Time Across Simulations",
x = "Number of Stations",
y = "Real Time") +
theme_minimal()
long_df <- merged_df %>%
pivot_longer(cols = starts_with("Real_Time"),
names_to = "Dataset",
values_to = "Real_Time")
ggplot(long_df, aes(x = Simulation_Time, y = Real_Time, color = Dataset)) +
geom_line() +
scale_x_continuous(breaks = seq(min(long_df$Simulation_Time), max(long_df$Simulation_Time), by = 3)) +
labs(title = "Comparison of Real Time Across Simulations",
x = "Simulation Time",
y = "Real Time") +
theme_minimal()
ggplot(long_sf, aes(x = Num_Stations, y = Real_Time, color = Dataset)) +
geom_line() +
scale_x_continuous(breaks = seq(min(long_sf$Num_Stations), max(long_sf$Num_Stations), by = 1)) +
labs(title = "Comparison of Real Time Across Simulations",
x = "Number of Stations",
y = "Real Time") +
theme_minimal()
library(readxl)
library(ggplot2)
library(dplyr)
library(tidyverse)
serialData <- read_excel(file.choose())
parallelData <- read_excel(file.choose())
serialStations <- read_excel(file.choose())
parallelStations <- read_excel(file.choose())
colnames(serialData) <- c("Simulation_Time", "Real_Time_1")
colnames(parallelData) <- c("Simulation_Time", "Real_Time_2")
merged_df <- inner_join(serialData, parallelData, by = "Simulation_Time")
long_df <- merged_df %>%
pivot_longer(cols = starts_with("Real_Time"),
names_to = "Dataset",
values_to = "Real_Time")
ggplot(long_df, aes(x = Simulation_Time, y = Real_Time, color = Dataset)) +
geom_line() +
scale_x_continuous(breaks = seq(min(long_df$Simulation_Time), max(long_df$Simulation_Time), by = 3)) +
labs(title = "Comparison of Real Time Across Simulations",
x = "Simulation Time",
y = "Real Time") +
theme_minimal()
colnames(serialStations) <- c("Num_Stations","Real_Time_1")
colnames(parallelStations) <- c("Num_Stations","Real_Time_2")
merged_sf <- inner_join(serialStations,parallelStations, by = "Num_Stations")
long_sf <- merged_sf %>%
pivot_longer(cols = starts_with("Real_Time"),
names_to = "Dataset",
values_to = "Real_Time")
ggplot(long_sf, aes(x = Num_Stations, y = Real_Time, color = Dataset)) +
geom_line() +
scale_x_continuous(breaks = seq(min(long_sf$Num_Stations), max(long_sf$Num_Stations), by = 1)) +
labs(title = "Comparison of Real Time Across Simulations",
x = "Number of Stations",
y = "Real Time") +
theme_minimal()
ggplot(long_df, aes(x = Simulation_Time, y = Real_Time, color = Dataset)) +
geom_line() +
scale_x_continuous(breaks = seq(min(long_df$Simulation_Time), max(long_df$Simulation_Time), by = 3)) +
labs(title = "Comparison of Real Time Across Simulations",
x = "Simulation Time",
y = "Real Time") +
theme_minimal()
ggplot(long_sf, aes(x = Num_Stations, y = Real_Time, color = Dataset)) +
geom_line() +
scale_x_continuous(breaks = seq(min(long_sf$Num_Stations), max(long_sf$Num_Stations), by = 1)) +
labs(title = "Comparison of Real Time Across Simulations",
x = "Number of Stations",
y = "Real Time") +
theme_minimal()
library(readxl)
library(ggplot2)
library(dplyr)
library(tidyverse)
serialData <- read_excel(file.choose())
parallelData <- read_excel(file.choose())
serialStations <- read_excel(file.choose())
parallelStations <- read_excel(file.choose())
colnames(serialData) <- c("Simulation_Time", "Real_Time_1")
colnames(parallelData) <- c("Simulation_Time", "Real_Time_2")
long_df <- merged_df %>%
pivot_longer(cols = starts_with("Real_Time"),
names_to = "Dataset",
values_to = "Real_Time")
merged_df <- inner_join(serialData, parallelData, by = "Simulation_Time")
colnames(serialStations) <- c("Num_Stations","Real_Time_1")
colnames(parallelStations) <- c("Num_Stations","Real_Time_2")
merged_sf <- inner_join(serialStations,parallelStations, by = "Num_Stations")
long_sf <- merged_sf %>%
pivot_longer(cols = starts_with("Real_Time"),
names_to = "Dataset",
values_to = "Real_Time")
ggplot(long_df, aes(x = Simulation_Time, y = Real_Time, color = Dataset)) +
geom_line() +
scale_x_continuous(breaks = seq(min(long_df$Simulation_Time), max(long_df$Simulation_Time), by = 3)) +
labs(title = "Comparison of Real Time Across Simulations",
x = "Simulation Time",
y = "Real Time") +
theme_minimal()
long_df <- merged_df %>%
pivot_longer(cols = starts_with("Real_Time"),
names_to = "Dataset",
values_to = "Real_Time")
ggplot(long_df, aes(x = Simulation_Time, y = Real_Time, color = Dataset)) +
geom_line() +
scale_x_continuous(breaks = seq(min(long_df$Simulation_Time), max(long_df$Simulation_Time), by = 3)) +
labs(title = "Comparison of Real Time Across Simulations",
x = "Simulation Time",
y = "Real Time") +
theme_minimal()
ggplot(long_sf, aes(x = Num_Stations, y = Real_Time, color = Dataset)) +
geom_line() +
scale_x_continuous(breaks = seq(min(long_sf$Num_Stations), max(long_sf$Num_Stations), by = 1)) +
labs(title = "Comparison of Real Time Across Simulations",
x = "Number of Stations",
y = "Real Time") +
theme_minimal()
View(parallelStations)
View(parallelStations)
df <- read_excel("DocumentationScalabilityTestResults.xlsx", sheet = "Sheet1")
# Load necessary library
library(readxl)
setwd("C:/School/Master's Project/OurProject/EVLibScalabilityTest")
df <- read_excel("DocumentationScalabilityTestResults.xlsx", sheet = "Sheet1")
averages <- tail(df,1)
averages <- averages[-1]
avg_values <- as.numeric(averages)
names(avg_values) <- colnames(averages)
# Create a line plot
plot(avg_values, type = "o", col = "red", lwd = 2, pch = 16,
xlab = "Percentage Increase", ylab = "Average Time in Seconds",
main = "Runtime of Simulation with Increasing Events", xaxt = "n")
# Add custom x-axis labels
axis(1, at = 1:length(avg_values), labels = names(avg_values))
